from pyspark.sql import SparkSession

from pyspark.ml.evaluation import RegressionEvaluator
from pyspark.ml.recommendation import ALS
from pyspark.sql import Row

spark = SparkSession\
        .builder\
        .appName("ALSExample")\
        .getOrCreate()

lines = spark.read.text("../../test/sample_data.hdfs.txt").rdd
ratingsRDD = lines.map(lambda p: Row(bookId=int(p[0]), averageRating=int(p[1]),ratingCount=long(p[2])))
ratings = spark.createDataFrame(ratingsRDD)


(training, test) = ratings.randomSplit([0.8, 0.2])
als = ALS(maxIter=5, regParam=0.01, itemCol="bookId", ratingCol="rating",
              coldStartStrategy="drop")
model = als.fit(training)

# Evaluate the model by computing the RMSE on the test data
predictions = model.transform(test)
evaluator = RegressionEvaluator(metricName="rmse", labelCol="rating",
                                    predictionCol="prediction")
rmse = evaluator.evaluate(predictions)
print("Root-mean-square error = " + str(rmse))

# Recommend Books
bookRecs = model.recommendForAllItems(10)
# Generate top 10 user recommendations for a specified set of movies
books = ratings.select(als.getItemCol()).distinct().limit(3)
bookSubSetRecs = model.recommendForItemSubset(books, 10)

# Display the result
bookRecs.show()
bookSubSetRecs.show()
spark.stop()
 
